[{"/home/dillon/workspace/kennels/src/components/animal/Animal.js":"1","/home/dillon/workspace/kennels/src/components/location/Location.js":"2","/home/dillon/workspace/kennels/src/components/animal/AnimalList.js":"3","/home/dillon/workspace/kennels/src/components/employee/EmployeeProvider.js":"4","/home/dillon/workspace/kennels/src/components/Kennel.js":"5","/home/dillon/workspace/kennels/src/components/employee/EmployeeList.js":"6","/home/dillon/workspace/kennels/src/components/customer/CustomerProvider.js":"7","/home/dillon/workspace/kennels/src/components/customer/CustomerList.js":"8","/home/dillon/workspace/kennels/src/components/nav/NavBar.js":"9","/home/dillon/workspace/kennels/src/index.js":"10","/home/dillon/workspace/kennels/src/components/customer/Customer.js":"11","/home/dillon/workspace/kennels/src/components/ApplicationViews.js":"12","/home/dillon/workspace/kennels/src/components/animal/AnimalProvider.js":"13","/home/dillon/workspace/kennels/src/components/location/LocationProvider.js":"14","/home/dillon/workspace/kennels/src/components/employee/EmployeeForm.js":"15","/home/dillon/workspace/kennels/src/components/employee/Employee.js":"16","/home/dillon/workspace/kennels/src/components/location/LocationList.js":"17","/home/dillon/workspace/kennels/src/components/auth/Login.js":"18","/home/dillon/workspace/kennels/src/components/auth/Register.js":"19","/home/dillon/workspace/kennels/src/components/animal/AnimalForm.js":"20","/home/dillon/workspace/kennels/src/components/employee/EmployeeDetail.js":"21","/home/dillon/workspace/kennels/src/components/location/LocationDetail.js":"22","/home/dillon/workspace/kennels/src/components/animal/AnimalDetail.js":"23","/home/dillon/workspace/kennels/src/components/animal/AnimalSearch.js":"24"},{"size":392,"mtime":1606930559962,"results":"25","hashOfConfig":"26"},{"size":282,"mtime":1606168262370,"results":"27","hashOfConfig":"26"},{"size":1696,"mtime":1606939929181,"results":"28","hashOfConfig":"26"},{"size":1297,"mtime":1606240276534,"results":"29","hashOfConfig":"26"},{"size":902,"mtime":1606693449130,"results":"30","hashOfConfig":"26"},{"size":919,"mtime":1606767674349,"results":"31","hashOfConfig":"26"},{"size":1297,"mtime":1606766173782,"results":"32","hashOfConfig":"26"},{"size":886,"mtime":1606240276528,"results":"33","hashOfConfig":"26"},{"size":746,"mtime":1606234698122,"results":"34","hashOfConfig":"26"},{"size":350,"mtime":1606240276541,"results":"35","hashOfConfig":"26"},{"size":267,"mtime":1606766351851,"results":"36","hashOfConfig":"26"},{"size":3444,"mtime":1606939822743,"results":"37","hashOfConfig":"26"},{"size":1512,"mtime":1606939547755,"results":"38","hashOfConfig":"26"},{"size":1297,"mtime":1606168251000,"results":"39","hashOfConfig":"26"},{"size":3822,"mtime":1606764475185,"results":"40","hashOfConfig":"26"},{"size":344,"mtime":1606503845162,"results":"41","hashOfConfig":"26"},{"size":1980,"mtime":1606772505694,"results":"42","hashOfConfig":"26"},{"size":2973,"mtime":1606693507631,"results":"43","hashOfConfig":"26"},{"size":4225,"mtime":1606693507630,"results":"44","hashOfConfig":"26"},{"size":3036,"mtime":1606765479689,"results":"45","hashOfConfig":"26"},{"size":1673,"mtime":1606767655131,"results":"46","hashOfConfig":"26"},{"size":758,"mtime":1606771674325,"results":"47","hashOfConfig":"26"},{"size":1283,"mtime":1606930798649,"results":"48","hashOfConfig":"26"},{"size":516,"mtime":1606939740918,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1s76hrs",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dillon/workspace/kennels/src/components/animal/Animal.js",[],["106","107"],"/home/dillon/workspace/kennels/src/components/location/Location.js",[],["108","109"],"/home/dillon/workspace/kennels/src/components/animal/AnimalList.js",["110"],"/home/dillon/workspace/kennels/src/components/employee/EmployeeProvider.js",[],"/home/dillon/workspace/kennels/src/components/Kennel.js",[],"/home/dillon/workspace/kennels/src/components/employee/EmployeeList.js",["111"],"/home/dillon/workspace/kennels/src/components/customer/CustomerProvider.js",[],"/home/dillon/workspace/kennels/src/components/customer/CustomerList.js",["112"],"import React, { useContext, useEffect } from \"react\"\nimport { Customer } from \"./Customer\"\nimport { CustomerContext } from \"./CustomerProvider\"\n\n\nexport const CustomerList = () => {\n  // This state changes when `getLocations()` is invoked below\n  const { customers, getCustomers } = useContext(CustomerContext)\n\n  /*\n        What's the effect this is reponding to? Component was\n        \"mounted\" to the DOM. React renders blank HTML first,\n        then gets the data, then re-renders.\n    */\n  useEffect(\n    () => {\n      getCustomers()\n    },\n    []\n  )\n\n  /*\n        This effect is solely for learning purposes. The effect\n        it is responding to is that the location state changed.\n    */\n  useEffect(() => {\n  }, [customers])\n\n  return (\n    <div className=\"customers\">\n      {\n        customers.map(cust => <Customer key={cust.id} customer={cust} />)\n      }\n    </div>\n  )\n}","/home/dillon/workspace/kennels/src/components/nav/NavBar.js",[],"/home/dillon/workspace/kennels/src/index.js",[],"/home/dillon/workspace/kennels/src/components/customer/Customer.js",[],"/home/dillon/workspace/kennels/src/components/ApplicationViews.js",[],"/home/dillon/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/home/dillon/workspace/kennels/src/components/location/LocationProvider.js",[],"/home/dillon/workspace/kennels/src/components/employee/EmployeeForm.js",["113"],"import React, { useContext, useRef, useEffect } from \"react\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { AnimalContext } from \"../animal/AnimalProvider\"\nimport \"./Employee.css\"\n\nexport const EmployeeForm = (props) => {\n    const { addEmployee } = useContext(EmployeeContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { animals, getAnimals } = useContext(AnimalContext)\n\n    /*\n        Create references that can be attached to the input\n        fields in the form. This will allow you to get the\n        value of the input fields later when the user clicks\n        the save button.\n\n        No more `document.querySelector()` in React.\n    */\n    const name = useRef(null)\n    const location = useRef(null)\n    const animal = useRef(null)\n\n    /*\n        Get animal state and location state on initialization.\n    */\n    useEffect(() => {\n       getAnimals().then(getLocations)\n     \n    }, [])\n\n    const constructNewEmployee = () => {\n        /*\n            The `location` and `animal` variables below are\n            the references attached to the input fields. You\n            can't just ask for the `.value` property directly,\n            but rather `.current.value` now in React.\n        */\n        const locationId = parseInt(location.current.value)\n        const animalId = parseInt(animal.current.value)\n\n        if (locationId === 0) {\n            window.alert(\"Please select a location\")\n        } else {\n            addEmployee({\n                name: name.current.value,\n                locationId,\n                animalId\n            })\n            .then(() => props.history.push(\"/employees\"))\n        }\n    }\n\n    return (\n        <form className=\"employeeForm\">\n            <h2 className=\"employeeForm__title\">New Employee</h2>\n            <fieldset>           \n                <div className=\"form-group\">\n                    <label htmlFor=\"employeeName\">Employee name: </label>\n                    <input type=\"text\" id=\"employeeName\" ref={name} required autoFocus className=\"form-control\" placeholder=\"Employee name\" />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Assign to location: </label>\n                    <select defaultValue=\"\" name=\"location\" ref={location} id=\"employeeLocation\" className=\"form-control\" >\n                        <option value=\"0\">Select a location</option>\n                        {locations.map(e => (\n                            <option key={e.id} value={e.id}>\n                                {e.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Caretaker for: </label>\n                    <select defaultValue=\"\" name=\"animal\" ref={animal} id=\"employeeAnimal\" className=\"form-control\" >\n                        <option value=\"0\">Select an animal</option>\n                        {animals.map(e => (\n                            <option key={e.id} value={e.id}>\n                                {e.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <button type=\"submit\"\n                onClick={evt => {\n                    console.log(\"hello\")\n                    evt.preventDefault() // Prevent browser from submitting the form\n                    constructNewEmployee()\n                }}\n                className=\"btn btn-primary\">\n                Save Employee\n            </button>\n        </form>\n    )\n}","/home/dillon/workspace/kennels/src/components/employee/Employee.js",[],"/home/dillon/workspace/kennels/src/components/location/LocationList.js",["114"],"/home/dillon/workspace/kennels/src/components/auth/Login.js",[],"/home/dillon/workspace/kennels/src/components/auth/Register.js",[],"/home/dillon/workspace/kennels/src/components/animal/AnimalForm.js",["115"],"import React, { useContext, useRef, useEffect } from \"react\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { AnimalContext } from \"./AnimalProvider\"\n\nexport const AnimalForm = (props) => {\n    const { addAnimal } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n\n    const name = useRef(null)\n    const location = useRef(null)\n    const dogBreed = useRef(null)\n\n    useEffect(() => {\n        getLocations()\n    }, [])\n\n    const makeAppointment = () => {\n        /*\n            The `location` and `animal` variables below are\n            the references attached to the input fields. You\n            can't just ask for the `.value` property directly,\n            but rather `.current.value` now in React.\n        */\n        const locationId = parseInt(location.current.value)\n        const customerId = parseInt(localStorage.getItem(\"kennel_customer\"))\n        const breed = dogBreed.current.value\n\n        if (locationId === 0 || name === null) {\n            window.alert(\"Please make sure to input animal name and choose a location\")\n        } else {\n            addAnimal({\n                name: name.current.value,\n                locationId,\n                customerId,\n                breed\n            })\n            .then(() => props.history.push(\"/animals\"))\n        }\n    }\n\n    return (\n        <form className=\"animalForm\">\n        <h2 className=\"animalForm__title\">New animal</h2>\n        <fieldset>           \n            <div className=\"form-group\">\n                <label htmlFor=\"animalName\">animal name: </label>\n                <input type=\"text\" id=\"animalName\" ref={name} required autoFocus className=\"form-control\" placeholder=\"animal name\" />\n            </div>\n        </fieldset>\n        <fieldset>           \n            <div className=\"form-group\">\n                <label htmlFor=\"animalBreed\">animal breed: </label>\n                <input type=\"text\" id=\"animalName\" ref={dogBreed} required autoFocus className=\"form-control\" placeholder=\"animal breed\" />\n            </div>\n        </fieldset>\n        <fieldset>\n            <div className=\"form-group\">\n                <label htmlFor=\"location\">Assign to location: </label>\n                <select defaultValue=\"\" name=\"location\" ref={location} id=\"animalLocation\" className=\"form-control\" >\n                    <option value=\"0\">Select a location</option>\n                    {locations.map(e => (\n                        <option key={e.id} value={e.id}>\n                            {e.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </fieldset>\n        <button type=\"submit\"\n                onClick={evt => {\n                    console.log(\"hello\")\n                    evt.preventDefault() // Prevent browser from submitting the form\n                    makeAppointment()\n                }}\n                className=\"btn btn-primary\">\n                Make Appointment\n            </button>\n        </form>\n    )\n}","/home/dillon/workspace/kennels/src/components/employee/EmployeeDetail.js",["116","117","118","119"],"import React, { useState, useEffect, useContext } from \"react\"\nimport { AnimalContext } from \"../animal/AnimalProvider\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport \"./Employee.css\"\n\n\nexport const EmployeeDetail = (props) => {\n    const { animals, getAnimals } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { employees, getEmployees } = useContext(EmployeeContext)\n\n    const [animal, setAnimal] = useState({})\n    const [employee, setEmployee] = useState({})\n    const [location, setLocation] = useState({})\n\n    useEffect(() => {\n        getEmployees()\n            .then(getAnimals)\n            .then(getLocations)\n    }, [])\n\n    useEffect(() => {\n        const animal = animals.find(a => a.id === employee.animalId) || {}\n        setAnimal(animal)\n    }, [animals])\n\n    useEffect(() => {\n        const employee = employees.find(e => e.id === parseInt(props.match.params.employeeId)) || {}\n        setEmployee(employee)\n    }, [employees])\n\n    useEffect(() => {\n        const location = locations.find(l => l.id === employee.locationId) || {}\n        setLocation(location)\n    }, [locations])\n\n    return (\n        <section className=\"employee\">\n            <h3 className=\"employee__name\">{employee.name}</h3>\n            <div>Currently working at { location.name }</div>\n            <div>\n                {\n                (employee.animalId === null)\n                    ? \"Not assigned to an animal\"\n                    : `Currently taking care of ${animal.name}`\n                }\n            </div>\n        </section>\n    )\n}","/home/dillon/workspace/kennels/src/components/location/LocationDetail.js",["120"],"import React, { useState } from \"react\"\nimport \"./Location.css\"\n\nexport const LocationDetail = (props) => {\n    return (\n        <section className=\"location\">\n            <h2 className=\"location__name\">{props.location.state.chosenLocation.name}</h2>\n            <address className=\"location__address\">{props.location.state.chosenLocation.address}</address>\n            <div>\n                <h4>Employees</h4>\n                { props.location.state.chosenLocation.employees.map(e => e.name).join(\", \") }\n            </div>\n            <div>\n                <h4>Current Residents</h4>\n                {\n                    props.location.state.chosenLocation.animals.map(a => a.name).join(\", \")\n                }\n            </div>\n        </section>\n    )\n}","/home/dillon/workspace/kennels/src/components/animal/AnimalDetail.js",["121"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { AnimalContext } from \"./AnimalProvider\"\nimport \"./Animal.css\"\n\nexport const AnimalDetail = (props) => {\n    const { releaseAnimal, getAnimalById } = useContext(AnimalContext)\n\n    const [animal, setAnimal] = useState({ location: {}, customer: {}})\n\n    useEffect(() => {\n        const animalId = parseInt(props.match.params.animalId)\n        getAnimalById(animalId)\n            .then(setAnimal)\n    }, [])\n\n    return (\n        <section className=\"animal\">\n            <h3 className=\"animal__name\">{animal.name}</h3>\n            <div className=\"animal__breed\">{animal.breed}</div>\n            <div className=\"animal__location\">Location: {animal.location.name}</div>\n            <div className=\"animal__owner\">Customer: {animal.customer.name}</div>\n            <button onClick={\n                () => {\n                    releaseAnimal(animal)\n                        .then(() => {\n                            props.history.push(\"/animals\")\n                        })\n                }\n            }>\n                Release Animal\n            </button>\n            <button onClick={() => {\n                props.history.push(`/animals/edit/${animal.id}`)\n            }}>Edit</button>\n        </section>\n    )\n}","/home/dillon/workspace/kennels/src/components/animal/AnimalSearch.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":16,"column":8,"nodeType":"130","endLine":16,"endColumn":10,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":11,"column":8,"nodeType":"130","endLine":11,"endColumn":10,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"134","line":19,"column":5,"nodeType":"130","endLine":19,"endColumn":7,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":30,"column":8,"nodeType":"130","endLine":30,"endColumn":10,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":15,"column":8,"nodeType":"130","endLine":15,"endColumn":10,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":15,"column":8,"nodeType":"130","endLine":15,"endColumn":10,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"138","line":21,"column":8,"nodeType":"130","endLine":21,"endColumn":10,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"143","line":26,"column":8,"nodeType":"130","endLine":26,"endColumn":17,"suggestions":"144"},{"ruleId":"128","severity":1,"message":"145","line":31,"column":8,"nodeType":"130","endLine":31,"endColumn":19,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":36,"column":8,"nodeType":"130","endLine":36,"endColumn":19,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"153","line":14,"column":8,"nodeType":"130","endLine":14,"endColumn":10,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAnimals'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has missing dependencies: 'getAnimals' and 'getLocations'. Either include them or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'getAnimals', 'getEmployees', and 'getLocations'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["162"],["163"],"React Hook useEffect has a missing dependency: 'employee.animalId'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'props.match.params.employeeId'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'employee.locationId'. Either include it or remove the dependency array.",["166"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getAnimalById' and 'props.match.params.animalId'. Either include them or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"176","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [getAnimals]",{"range":"189","text":"190"},"Update the dependencies array to be: [getEmployees]",{"range":"191","text":"192"},"Update the dependencies array to be: [getCustomers]",{"range":"193","text":"194"},"Update the dependencies array to be: [getAnimals, getLocations]",{"range":"195","text":"196"},"Update the dependencies array to be: [getAnimals, getEmployees, getLocations]",{"range":"197","text":"198"},"Update the dependencies array to be: [getLocations]",{"range":"199","text":"200"},{"range":"201","text":"198"},"Update the dependencies array to be: [animals, employee.animalId]",{"range":"202","text":"203"},"Update the dependencies array to be: [employees, props.match.params.employeeId]",{"range":"204","text":"205"},"Update the dependencies array to be: [employee.locationId, locations]",{"range":"206","text":"207"},"Update the dependencies array to be: [getAnimalById, props.match.params.animalId]",{"range":"208","text":"209"},[487,489],"[getAnimals]",[331,333],"[getEmployees]",[550,552],"[getCustomers]",[1008,1010],"[getAnimals, getLocations]",[614,616],"[getAnimals, getEmployees, getLocations]",[485,487],"[getLocations]",[762,764],[897,906],"[animals, employee.animalId]",[1069,1080],"[employees, props.match.params.employeeId]",[1223,1234],"[employee.locationId, locations]",[474,476],"[getAnimalById, props.match.params.animalId]"]